version: 2.1
orbs:
  # Including necessary ORBS configurations
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  browser-tools: circleci/browser-tools@1.4.0
  # Creating Build and Deploy jobs
jobs:
  # Build job for Installing > Linting > Testing > Building (CI)
  build:
    # Choosing appropriate container
    docker:
      - image: "cimg/node:14.15.1" 
    steps:
      # Installing node and browser tools then checkout
      - node/install:
          node-version: '14.15.1'
      - browser-tools/install-browser-tools:
          chrome-version: 100.0.4896.60        
      - checkout
      # Using root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
      # Using root level package.json to install dependencies in the backend api         
      - run:
          name: Install API Dependencies
          command: |
           npm run api:install
      # Lint the frontend
      - run:
          name: Front-End Lint
          command: |
            npm run frontend:lint
      # Test the frontend
      - run:
          name: Front-End Test
          command: |
            sudo apt-get install -y xvfb
            sudo apt-get -y install xorg xvfb gtk2-engines-pixbuf
            sudo apt-get -y install dbus-x11 xfonts-base xfonts-100dpi xfonts-75dpi xfonts-cyrillic xfonts-scalable
            sudo apt-get -y install imagemagick x11-apps
            Xvfb -ac :99 -screen 0 1280x1024x16 &
            export DISPLAY=:99
            npm run frontend:test
            npm run frontend:e2e
      # Build the frontend app
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      # Build the backend API      
      - run:
          name: API Build
          command: |
            npm run api:build
  # Deploy job for approve-based deployment (Continious Delivery)
  deploy:
    # Choosing appropriate container
    docker:
      - image: "cimg/base:stable"
    steps:
      # Installing node; setting up eb, aws-cli, then checkout
      - node/install:
          node-version: '14.15' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          # Installing, building, and deploying frontend [Note: tried to use persist_workspase/attach_workspace but did know paths]
          name: Deploy Frontend
          command: |
            npm run frontend:deploy
      - run:
          name: Deploy Backend
          # Installing, building, and deploying api
          command: |
            npm run api:deploy

# Adding workflows for controling job sequence
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
            
        # Deploy runs after approval only
      - deploy:
          requires:
            - hold
